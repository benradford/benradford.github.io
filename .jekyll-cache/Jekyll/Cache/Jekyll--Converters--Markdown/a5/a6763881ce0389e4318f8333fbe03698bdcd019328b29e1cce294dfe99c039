I"]:<p><a href="http://www.politifact.com">Politifact</a> is a website the rates the truthfulness of public statements. Generally they focus on statements by political leaders but they’ll also tackle celebrities, chain emails, and bloggers from time to time. Statements are rated on a five point scale: “Pants on Fire!,” “False,” “Mostly False,” “Half-True,” “Mostly True,” and “True.” The script below will scrape Politifact and save every statement in a gzipped CSV file. The data is structured as <code class="language-plaintext highlighter-rouge">who</code>, <code class="language-plaintext highlighter-rouge">when</code>, <code class="language-plaintext highlighter-rouge">validity</code>, <code class="language-plaintext highlighter-rouge">subjects</code>, <code class="language-plaintext highlighter-rouge">statement</code>.</p>

<p>The code is available below and also on <a href="https://github.com/benradford/Politifact-Scraper/blob/master/politifact.R">Github</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">XML</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span><span class="w">

</span><span class="n">page_one_of</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract_all</span><span class="p">(</span><span class="n">as</span><span class="p">(</span><span class="n">htmlParse</span><span class="p">(</span><span class="s2">"http://www.politifact.com/truth-o-meter/statements/"</span><span class="p">),</span><span class="s2">"character"</span><span class="p">),</span><span class="s2">"Page\\s+1\\s+of\\s+[[:digit:]]+"</span><span class="p">)</span><span class="w">
</span><span class="n">total_pages</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">str_extract</span><span class="p">(</span><span class="n">page_one_of</span><span class="p">,</span><span class="s2">"[[:digit:]]+$"</span><span class="p">))</span><span class="w">

</span><span class="n">statements</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">ii</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">total_pages</span><span class="p">)</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="n">cat</span><span class="p">(</span><span class="s2">"\r"</span><span class="p">,</span><span class="n">ii</span><span class="p">)</span><span class="w">
  </span><span class="n">base.url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"http://www.politifact.com/truth-o-meter/statements/?page="</span><span class="p">,</span><span class="n">ii</span><span class="p">)</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">htmlParse</span><span class="p">(</span><span class="n">base.url</span><span class="p">)</span><span class="w">
  </span><span class="n">links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract_all</span><span class="p">(</span><span class="n">toString.XMLNode</span><span class="p">(</span><span class="n">page</span><span class="p">),</span><span class="s1">'truth-o-meter/statements/[[:digit:]]+/[^\\"]+'</span><span class="p">)</span><span class="w">
  </span><span class="n">links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">links</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
  </span><span class="n">links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">links</span><span class="p">[</span><span class="o">!</span><span class="n">duplicated</span><span class="p">(</span><span class="n">links</span><span class="p">)]</span><span class="w">
  </span><span class="n">links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"http://www.politifact.com/"</span><span class="p">,</span><span class="n">links</span><span class="p">)</span><span class="w">
  </span><span class="n">statements</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">statements</span><span class="p">,</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">links</span><span class="p">))</span><span class="w">
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="m">0.5</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">statement.urls</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="n">statements</span><span class="p">)</span><span class="w">

</span><span class="n">getFib</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="n">single.url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">url</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">htmlParse</span><span class="p">(</span><span class="n">single.url</span><span class="p">)</span><span class="w">
  </span><span class="n">statement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xpathSApply</span><span class="p">(</span><span class="n">page</span><span class="p">,</span><span class="w"> </span><span class="s2">"//*/div[@class='statement__text']"</span><span class="p">,</span><span class="w"> </span><span class="n">xmlValue</span><span class="p">)</span><span class="w">
  </span><span class="n">statement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s1">'\\\"|\\\r|\\\n|\\\t'</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">statement</span><span class="p">)</span><span class="w">
  
  </span><span class="n">subjects</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract_all</span><span class="p">(</span><span class="n">toString.XMLNode</span><span class="p">(</span><span class="n">page</span><span class="p">),</span><span class="s1">'\\&lt;a href="/subjects/[^/]*'</span><span class="p">)[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
  </span><span class="n">subjects</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subjects</span><span class="p">[</span><span class="o">!</span><span class="n">grepl</span><span class="p">(</span><span class="s2">"By subject"</span><span class="p">,</span><span class="w"> </span><span class="n">subjects</span><span class="p">)]</span><span class="w">
  </span><span class="n">subjects</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">str_extract_all</span><span class="p">(</span><span class="n">subjects</span><span class="p">,</span><span class="w"> </span><span class="s2">"[^/]+$"</span><span class="p">))</span><span class="w">
  </span><span class="n">subjects</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">subjects</span><span class="p">,</span><span class="n">collapse</span><span class="o">=</span><span class="s2">", "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">validity</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract_all</span><span class="p">(</span><span class="n">toString.XMLNode</span><span class="p">(</span><span class="n">page</span><span class="p">),</span><span class="w"> </span><span class="s1">'alt="Mostly False"|alt="Mostly True"|alt="True"|alt="Half-True"|alt="False"|alt="Pants on Fire!"'</span><span class="p">)[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
  </span><span class="n">validity</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s1">'^[^\\\"]+|\\\"'</span><span class="p">,</span><span class="s2">""</span><span class="p">,</span><span class="n">validity</span><span class="p">)</span><span class="w">
  
  </span><span class="n">who.when</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xpathSApply</span><span class="p">(</span><span class="n">page</span><span class="p">,</span><span class="w"> </span><span class="s2">"//*/p[@class='statement__meta']"</span><span class="p">,</span><span class="w"> </span><span class="n">xmlValue</span><span class="p">)[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
  </span><span class="n">when</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract</span><span class="p">(</span><span class="n">who.when</span><span class="p">,</span><span class="s2">"(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday), [[:alpha:]]+ [[:alnum:]]+, [[:digit:]]+"</span><span class="p">)</span><span class="w">
  </span><span class="n">who.when</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">" on "</span><span class="p">,</span><span class="w"> </span><span class="s2">"~"</span><span class="p">,</span><span class="w"> </span><span class="n">who.when</span><span class="p">)</span><span class="w">
  </span><span class="n">who</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract</span><span class="p">(</span><span class="n">who.when</span><span class="p">,</span><span class="s2">"^[^\\~]+"</span><span class="p">)</span><span class="w">
  </span><span class="n">who</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_extract</span><span class="p">(</span><span class="n">who</span><span class="p">,</span><span class="s2">"\\s.+$"</span><span class="p">)</span><span class="w">
  </span><span class="n">who</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"^\\s+"</span><span class="p">,</span><span class="s2">""</span><span class="p">,</span><span class="n">who</span><span class="p">)</span><span class="w">
  
  </span><span class="n">temp.fib</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="s2">"who"</span><span class="o">=</span><span class="n">who</span><span class="p">,</span><span class="s2">"when"</span><span class="o">=</span><span class="n">when</span><span class="p">,</span><span class="s2">"validity"</span><span class="o">=</span><span class="n">validity</span><span class="p">,</span><span class="s2">"subjects"</span><span class="o">=</span><span class="n">subjects</span><span class="p">,</span><span class="s2">"statement"</span><span class="o">=</span><span class="n">statement</span><span class="p">)</span><span class="w">
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0.25</span><span class="p">,</span><span class="m">0.75</span><span class="p">))</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">temp.fib</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">all.statements</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">statement.urls</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="o">=</span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="n">try</span><span class="p">(</span><span class="n">getFib</span><span class="p">(</span><span class="n">x</span><span class="p">)))</span><span class="w">
</span><span class="n">all.statements.df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">all.statements</span><span class="p">)</span><span class="w">

</span><span class="n">gz</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gzfile</span><span class="p">(</span><span class="s2">"politifact-statements.csv.gz"</span><span class="p">,</span><span class="w"> </span><span class="s2">"w"</span><span class="p">)</span><span class="w">
</span><span class="n">write.csv</span><span class="p">(</span><span class="n">all.statements.df</span><span class="p">,</span><span class="n">gz</span><span class="p">,</span><span class="w"> </span><span class="n">row.names</span><span class="o">=</span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="n">close</span><span class="p">(</span><span class="n">gz</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><em>Image courtesy of www.politifact.com.</em></p>
:ET